{
  "prompt": "\nYou are the worldâ€™s leading expert in program optimization and algebraic reasoning.\nYou are helping organize rewrite rules for use in an equality saturation system.\n\nYou will be given a batch of valid candidate rewrite rules.\n\nYour goal:\n  - Group the rules into semantic categories according to what they do.\n  - If a rule produces a RHS that is **structurally smaller than the LHS** (fewer operators, less nesting), place it in its own category.\n  - If a rule produces a RHS that is **more canonical or normalized** (terms reordered into standard order, consistent structure), place it in its own category.\n  - If a rule produces a RHS that is **more balanced or symmetric** than the LHS, place it in its own category.\n  - Do not lump simplifications with rules that merely reshuffle or perform minor transformations.\n  - Single out important rewrite patterns like idempotency, distributivity, or constant simplifications: they should always get their own category, even if there are only one or two rules of that type.\n  - Do not group rules together just because they use the same operators; create new categories for meaningful semantic differences.\n  - Place each rule under exactly one category.\n  - Remove rules which just look like noise.\n  - Strive to capture semantic differences clearly, even if that results in more categories than before.\n  - Avoid redundant categories; rules that are semantically similar should be grouped together.\n\nFormat your output like this:\n\nCategory: <brief description of transformation>\n<rule 1>\n<rule 2>\n...\n\nCategory: <next transformation>\n<rule 1>\n<rule 2>\n...\n\nDo not output numeric hints, explanations, or any other text. Only output the categories and rules.\n\nExample Input:\n(+ (* ?a 1) ?b) ==> (+ ?b (* ?a 1))\n(/ ?a ?a) ==> 1 if (!= ?a 0)\n(+ ?a (+ ?b ?c)) ==> (+ ?a (+ ?c ?b))\n(min ?a (+ ?a ?b)) ==> (+ ?a ?b) if (< ?b 0)\n(+ (+ ?a ?b) (* ?c 1)) ==> (+ (* ?c 1) (+ ?b ?a))\n(max (+ ?a ?b) ?c) ==> (max (+ ?b ?a) ?c)\n(< ?a (+ ?a ?b)) ==> (< ?a (+ ?b ?a))\n(* ?a (* ?b ?c)) ==> (* ?a (* ?c ?b))\n(+ (+ ?a ?b) (+ ?c ?d)) ==> (+ (+ ?b ?a) (+ ?d ?c))\n(< (?a (+ ?b ?c))) ==> (< ?a (+ ?c ?b)) if (!= ?b 0)\n(min ?a ?b) ==> ?a if (< ?a ?b)\n(* (* ?a ?b) ?c) ==> (* (* ?b ?a) ?c)\n(< (+ ?a ?b) (+ ?b ?a)) ==> 0 if (== ?a ?b)\n(min (+ ?a ?b) ?c) ==> (+ ?a (min ?b ?c)) if (< ?a ?c)\n(+ ?a (* ?b 0)) ==> ?a if (>= ?b 0)\n(+ ?a (+ ?b ?c)) ==> (+ ?b (+ ?a ?c))\n(< (+ ?a ?b) (+ ?b ?a)) ==> (< (+ ?b ?a) (+ ?a ?b))\n(/ ?a ?a) ==> 1 if (> ?a 0)\n(min ?a (+ ?b ?c)) ==> (min (+ ?c ?b) ?a)\n(* ?a (+ ?b ?c)) ==> (+ (* ?a ?b) (* ?a ?c)) if (>= ?a 0)\n(+ (+ ?a ?b) ?c) ==> (+ (+ ?b ?a) ?c)\n(min ?a (+ ?b ?c)) ==> (min ?a (+ ?c ?b))\n\nExample Output (Good):\nCategory: Simplifications for Division\n(/ ?a ?a) ==> 1 if (!= ?a 0)\n(/ ?a ?a) ==> 1 if (> ?a 0)\n\nCategory: Simplifications for Min\n(min ?a ?b) ==> ?a if (< ?a ?b)\n(min ?a (+ ?a ?b)) ==> (+ ?a ?b) if (< ?b 0)\n\nCategory: Constant Multiplication and Addition Simplifications\n(+ ?a (* ?b 0)) ==> ?a if (>= ?b 0)\n(+ (* ?a 1) ?b) ==> (+ ?b (* ?a 1))\n(+ (+ ?a ?b) (* ?c 1)) ==> (+ (* ?c 1) (+ ?b ?a))\n\nCategory: Commutativity and Argument Shuffling\n(+ ?a (+ ?b ?c)) ==> (+ ?a (+ ?c ?b))\n(+ ?a (+ ?b ?c)) ==> (+ ?b (+ ?a ?c))\n(* ?a (* ?b ?c)) ==> (* ?a (* ?c ?b))\n(* (* ?a ?b) ?c) ==> (* (* ?b ?a) ?c)\n(+ (+ ?a ?b) (+ ?c ?d)) ==> (+ (+ ?b ?a) (+ ?d ?c))\n(+ (+ ?a ?b) ?c) ==> (+ (+ ?b ?a) ?c)\n(max (+ ?a ?b) ?c) ==> (max (+ ?b ?a) ?c)\n\nCategory: Inequality Shuffles\n(< ?a (+ ?a ?b)) ==> (< ?a (+ ?b ?a))\n(< (+ ?a ?b) (+ ?b ?a)) ==> (< (+ ?b ?a) (+ ?a ?b))\n(< (+ ?a ?b) (+ ?b ?a)) ==> 0 if (== ?a ?b)\n(< (?a (+ ?b ?c))) ==> (< ?a (+ ?c ?b)) if (!= ?b 0)\n\nCategory: Min/Max Transformations\n(min (+ ?a ?b) ?c) ==> (+ ?a (min ?b ?c)) if (< ?a ?c)\n(min ?a (+ ?b ?c)) ==> (min (+ ?c ?b) ?a)\n(min ?a (+ ?b ?c)) ==> (min ?a (+ ?c ?b))\n\nCategory: Distributivity of Multiplication over Addition\n(* ?a (+ ?b ?c)) ==> (+ (* ?a ?b) (* ?a ?c)) if (>= ?a 0)\n\nCategory: Canonicalization / Reordering\n(+ ?a (+ ?b ?c)) ==> (+ ?a (+ ?c ?b))\n(+ ?a (+ ?b ?c)) ==> (+ ?b (+ ?a ?c))\n(max (+ ?a ?b) ?c) ==> (max (+ ?b ?a) ?c)\n\nCategory: Structural Simplifications\n(min ?a (+ ?a ?b)) ==> (+ ?a ?b) if (< ?b 0)\n(/ ?a ?a) ==> 1 if (!= ?a 0)\n(+ ?a (* ?b 0)) ==> ?a if (>= ?b 0)\n\nCategory: Balanced / Symmetric Transformations\n(+ (+ ?a ?b) (+ ?c ?d)) ==> (+ (+ ?b ?a) (+ ?d ?c))\n(+ (+ ?a ?b) ?c) ==> (+ (+ ?b ?a) ?c)\n\nInput:\n(- 0 (< ?a ?b)) ==> (- (< ?b ?a) 1) if (!= ?b ?a)\n(- (< ?b ?a) 1) ==> (- 0 (< ?a ?b)) if (!= ?b ?a)\n(- 0 (< ?a ?b)) ==> (- (< ?b ?a) 1) if (!= ?a ?b)\n(- (< ?b ?a) 1) ==> (- 0 (< ?a ?b)) if (!= ?a ?b)\n(< (< 0 ?b) ?a) ==> (< (< ?a ?b) ?a) if (!= ?a ?b)\n(< (< ?a ?b) ?a) ==> (< (< 0 ?b) ?a) if (!= ?a ?b)\n(< ?a (< ?b ?a)) ==> (< ?a (< ?b 1)) if (!= ?b ?a)\n(< ?a (< ?b 1)) ==> (< ?a (< ?b ?a)) if (!= ?b ?a)\n(< (< 0 ?b) ?a) ==> (< (< ?a ?b) ?a) if (!= ?b ?a)\n(< (< ?a ?b) ?a) ==> (< (< 0 ?b) ?a) if (!= ?b ?a)\n(< ?b (< ?a 1)) ==> (< ?b (< ?a ?b)) if (!= ?b ?a)\n(< ?b (< ?a ?b)) ==> (< ?b (< ?a 1)) if (!= ?b ?a)\n(< ?b (< ?b ?a)) ==> (< ?b 0) if (<= ?a 0)\n(< ?a (< 0 ?b)) ==> (< ?a 1) if (< ?a ?b)\n(< ?b (< ?a 1)) ==> (< ?b 0) if (< ?b ?a)\n(< (< 0 ?b) ?a) ==> (< 0 ?a) if (< ?b ?a)\n(< (< ?b 0) ?a) ==> (< 0 ?a) if (<= ?a ?b)\n(< (< 0 ?b) ?a) ==> (< 1 ?a) if (<= ?a ?b)\n(< ?a (< 0 ?b)) ==> (< ?a 0) if (<= ?b ?a)\n(< ?a (< 1 ?b)) ==> (< ?a 0) if (<= ?b ?a)\n",
  "model": "gpt-4o",
  "response": "Category: Symmetric Transformations for Subtraction and Inequality\n(- 0 (< ?a ?b)) ==> (- (< ?b ?a) 1) if (!= ?b ?a)\n(- (< ?b ?a) 1) ==> (- 0 (< ?a ?b)) if (!= ?b ?a)\n(- 0 (< ?a ?b)) ==> (- (< ?b ?a) 1) if (!= ?a ?b)\n(- (< ?b ?a) 1) ==> (- 0 (< ?a ?b)) if (!= ?a ?b)\n\nCategory: Inequality Shuffles\n(< (< 0 ?b) ?a) ==> (< (< ?a ?b) ?a) if (!= ?a ?b)\n(< (< ?a ?b) ?a) ==> (< (< 0 ?b) ?a) if (!= ?a ?b)\n(< ?a (< ?b ?a)) ==> (< ?a (< ?b 1)) if (!= ?b ?a)\n(< ?a (< ?b 1)) ==> (< ?a (< ?b ?a)) if (!= ?b ?a)\n(< (< 0 ?b) ?a) ==> (< (< ?a ?b) ?a) if (!= ?b ?a)\n(< (< ?a ?b) ?a) ==> (< (< 0 ?b) ?a) if (!= ?b ?a)\n(< ?b (< ?a 1)) ==> (< ?b (< ?a ?b)) if (!= ?b ?a)\n(< ?b (< ?a ?b)) ==> (< ?b (< ?a 1)) if (!= ?b ?a)\n\nCategory: Simplifications for Inequalities\n(< ?b (< ?b ?a)) ==> (< ?b 0) if (<= ?a 0)\n(< ?a (< 0 ?b)) ==> (< ?a 1) if (< ?a ?b)\n(< ?b (< ?a 1)) ==> (< ?b 0) if (< ?b ?a)\n(< (< 0 ?b) ?a) ==> (< 0 ?a) if (< ?b ?a)\n(< (< ?b 0) ?a) ==> (< 0 ?a) if (<= ?a ?b)\n(< (< 0 ?b) ?a) ==> (< 1 ?a) if (<= ?a ?b)\n(< ?a (< 0 ?b)) ==> (< ?a 0) if (<= ?b ?a)\n(< ?a (< 1 ?b)) ==> (< ?a 0) if (<= ?b ?a)"
}