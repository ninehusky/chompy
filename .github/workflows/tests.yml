name: Tests

on: [push]

env:
  RUST_BACKTRACE: full

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: dtolnay/rust-toolchain@stable
        with:
          profile: minimal
          override: true
      - run: rustup component add rustfmt

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: dtolnay/rust-toolchain@stable

      - run: rustup component add clippy

      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  unit:
    name: "Unit Tests"
    runs-on: ubuntu-latest
    env:
      SKIP_RECIPES: 1
    steps:
      - uses: actions/checkout@main
      - uses: dtolnay/rust-toolchain@stable

      - name: "Build"
        run: cargo build --release

      - name: "Unit tests"
        run: cargo test --release

  derivability:
    name: "Derivability Tests"
    runs-on: ubuntu-latest
    env:
      # the OUT_DIR should be the root of the project then out/
      OUT_DIR: ${{ github.workspace }}/out
    steps:
      - uses: actions/checkout@main
      - uses: dtolnay/rust-toolchain@stable

      - name: "Build"
        run: cargo build --release

      - name: "Setup tests"
        run: mkdir -p out/

      - name: "Derivability tests"
        run: cargo test --release --package ruler --test halide_derivability -- halide_derive_tests --show-output --nocapture

      - name: "Upload derivability results"
        uses: actions/upload-artifact@v4
        with:
          name: derive.json
          path: out/derive.json



  run_chompy:
    name: "Run Chompy"
    environment: nightly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: dtolnay/rust-toolchain@stable

      - name: "Build"
        run: cargo build --release

      - name: "Run Chompy"
        run: cargo run --release -- --mode handwritten --old-recipe-type og_recipe --output-path rules.txt

      - name: "Upload rules"
        uses: actions/upload-artifact@v4
        with:
          name: rules.txt
          path: rules.txt
